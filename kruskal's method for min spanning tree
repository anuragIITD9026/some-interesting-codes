class Solution {
  public:
    // Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int v, vector<vector<int>> adj[]) {
        // code here
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>> pq;
        vector<bool> ismst(v,0);
        vector<int> parent(v);
        int cost=0;
        pq.push({0,{0,-1}});
        while(!pq.empty())
        {
            int wt=pq.top().first;
            int par=pq.top().second.second;
            int node=pq.top().second.first;
            pq.pop();
            if(!ismst[node])
            {
                ismst[node]=1;
                cost+=wt;
                parent[node]=par;
                for(int j=0;j<adj[node].size();j++)
                {
                    if(!ismst[adj[node][j][0]])
                    {
                        pq.push({adj[node][j][1],{adj[node][j][0],node}});
                    }
                }
            }
        }
        return cost;
    }
};
